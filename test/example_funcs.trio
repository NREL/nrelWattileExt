name:testPrediction
func
src:
  // Test harnass to run a prediction against a Wattile test model
  // Recommended to run with arguments...
  // 
  //   wattileTask: read(task and wattileTask)
  //   wattileModel: read(wattileModel)
  //
  // Unless you have modified your test environment, these will
  // point to unique recs loaded as part of testEnvironmentSetup()
  
  (wattileTask, wattileModel) => do
    // Timestamp at which we want to call the prediction
    ts: dateTime(2021-12-08, time(08,00), "Denver") // December 8, 2021 08:00 MST
  
    // Uses the task framework to send actions and retrieve results
  
    // Model setup: read model configuration from the test model directory
    // See wattilePythonTask() and wattileModelSetup()
    wattileTask.taskSend({
      action: "setup",
      model:  wattileModel
    })
    
    // Run prediction for model setup created in the previous step
    // See wattilePythonTask() and wattilePythonPredict()
    future: wattileTask.taskSend({
      action: "predict",
      ts:     ts
    })
  
    // Get result
    future.futureGet()
  end
---
name:testPredictionSync
func
src:
  // Test the prediction point sync workflow of wattileSyncPredictions()
  // Recommended to run with arguments...
  // 
  //   wattileTask: read(task and wattileTask)
  //   wattileModel: read(wattileModel)
  //
  // Unless you have modified your test environment, these will
  // point to unique recs loaded as part of testEnvironmentSetup()
  
  (wattileTask, wattileModel) => do
    // Timestamp at which we want to sync the prediction
    ts: dateTime(2021-12-09, time(12,00), "Denver") // December 9, 2021 12:00 PM MST
  
    // Sync predictions from the model
    points: wattileSyncPredictions(wattileTask, wattileModel, ts, {overwrite})
    
    // Note: we use the 'overwrite' option here to overwrite any existing history,
    // allowing you to see changes if you modify the model or its associated points
    
    // Read data and return
    points.hisRead(ts.date)
  end