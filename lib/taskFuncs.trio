name:wattilePythonTask
doc:
  Task function to handle Docker container interactions.
  
  **TO DO:** Full documentation (not just scribbled notes)
  
  **msg** argument defines the actions to send the task; **image** specifies the Docker image to load for Python interaction.
  
  Set up the task with this function as the 'taskExpr' like this...
  
    (msg) => wattilePythonTask(msg, "name_of_image")
  
  I would have thought the following should also work, but it doesn't...
  
    wattilePythonTask(_, "name_of_image")
  
  Actions, specified via 'action' tag of **msg** as strings, are documented below.
  
  Setup
  -----
  
  Loads a model in preparation for prediction
  
  - 'action': "setup"
  - 'uri': Uri pointing to a trained model (directory)
  
  Predict
  -------
  
  Executes a prediction for a model previously loaded via the setup action
  
  - 'action': "predict"
  - 'ts': Timestamp defining the beginning of prediction window
  
func
overridable
src:
  (msg, image) => do
    // Input checking
    if (image.isStr == false) throw "'image' must be a string specifying a Docker image."
    if (msg.isDict == false) throw "'msg' must be a dictionary."
    if (msg.missing("action")) throw "'msg' dictionary must define an 'action' tag."
  
    // Get action (case-insensitive)
    action: msg->action.lower
  
    // Task progress: last action received
    taskProgress({action:action})
  
    // Initialize Python session
    pySession: py({image:image}).pyInit(wattilePythonInit)
  
    // Initialization
    if (action == "init") do
      // Nothing to do; initialization already handled above
      return "ok"
  
    // Setup
    else if (action == "setup") do
      // Model setup: see wattilePythonModelSetup()
      return pySession.wattilePythonModelSetup(msg->model)
    
    // Predict
    else if (action == "predict") do
      // Call prediction: see wattilePythonModelPredict()
      return pySession.wattilePythonModelPredict(msg->model, msg->span)
    end
  
  end